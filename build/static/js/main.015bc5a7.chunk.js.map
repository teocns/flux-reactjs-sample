{"version":3,"sources":["logo.svg","dispatcher.js","Constants/ActionTypes.js","Constants/SocketEvents.js","actions.js","socketHandler.js","socket.js","store.js","Constants/Vendors.js","Components/PickVendors.js","Views/Scrapers.js","helpers.js","stores/locations.js","Components/LocationsTable.js","stores/snapshotConfig.js","Components/SnapshotConfigTable.js","Views/SnapshotConfig.js","stores/downloads.js","Components/DownloadsTable.js","Views/Downloads.js","Components/BackendStatus.js","Views/Overview.js","Views/Locations.js","Views/Main.js","App.js","reportWebVitals.js","index.js"],"names":["dispatcher","Dispatcher","ActionTypes","require","keyMirror","SCRAPER_CONNECTED","CONTENT_SCRAPED","SPAWN_SCRAPER","STOP_SCRAPERS","FRONTEND_STATUS_RECEIVED","SCRAPER_STATUS_CHANGED","SCRAPER_SPAWNED","DOWNLOADS_SYNC_REQUESTED","DOWNLOADS_WAITING_FOR_SYNC","DOWNLOADS_SYNC_RECEIVED","BACKEND_STATUS_CHANGED","JOBS_BATCH_SCRAPED","LOCATION_UPDATED","SNAPSHOT_CONFIG_UPDATED","SCRAPE_LOCATION_BY_TERM_REQUESTED","SocketEvents","STATUS","FRONTEND_STATUS","SESSION_ID","STATUS_RECEIVED","SCRAPE_LOCATION_BY_TERM","requestStatus","socket","sendMessage","group","statusReceived","status","dispatch","actionType","data","sessIdReceived","scraperStatusChanged","scraperStatus","syncDownloads","isWaiting","setTimeout","downloadsSyncReceived","downloads","backendStatusChanged","backendConnected","jobsBatchScraped","jobsBatch","locationUpdated","location","scrapeLocationByTerm","term","scrapingSpeedDataReceived","speedData","SCRAPING_SPEED_DATA_UPDATED","bindSocketHandler","on","emit","actions","backendStatus","socketInstance","sock","io","secure","reconnect","rejectUnauthorized","transports","withCredentials","initialize","event","store","callback","this","removeListener","age","scraped","now","parseInt","Date","scrapers","jobsScraped","snapshotConfigs","map","s","session","sessionData","JSON","stringify","e","id","uuid","currentTask","statusPretty","downloadSyncing","console","log","EventEmitter","dispatchToken","register","willEmitChange","registerStatus","setBackendConnected","setScrapingSpeedData","emitChange","EnabledVendors","GLASSDOOR","Vendors","INDEED","LINKEDIN","CAREER_BUILDER","useStyles","makeStyles","theme","root","display","flexDirection","padding","spacing","subtitle","PickVendors","onUpdated","useState","Object","values","SelectedVendors","setSelectedVendors","useTheme","classes","Paper","className","FormLabel","component","style","textAlign","fontSize","FormGroup","marginTop","row","vendor","FormControlLabel","label","charAt","toUpperCase","slice","control","Checkbox","size","checked","includes","onChange","functionToCheck","willChangeTo","undefined","length","filter","v","toString","call","onCheckChanged","inputProps","disabled","React","memo","actionsRow","marginBottom","prettyTimelapse","date","moment","isMoment","unix","isSame","format","subtract","getFilename","fullPath","startIndex","indexOf","lastIndexOf","filename","substring","locationsStore","params","locations","ind","findIndex","loc","locationId","realId","find","c","setLocations","columns","minWidth","width","container","maxHeight","searchParent","justifyContent","LocationsTable","getTable","Locations","Filter","setFilter","page","setPage","rowsPerPage","setRowsPerPage","anchorEl","setAnchorEl","handleClick","currentTarget","handleClose","getAttribute","updateRows","newCome","toLowerCase","filtered","countryName","useEffect","addChangeListener","removeChangeListener","alignItems","TextField","placeholder","evt","txt","value","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","TableBody","hover","role","tabIndex","IconButton","aria-controls","aria-haspopup","onClick","MoreHoriz","Menu","keepMounted","open","Boolean","onClose","MenuItem","data-action","finished","Replay","marginRight","paddingLeft","Switch","name","color","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","target","snapshotConfigStore","el","setSnapshotConfigs","SnapshotConfigTable","SnapshotConfigs","Typography","variant","scrapedJobs","totalJobsCount","scrapedPages","totalNumberOfPages","code","SnasphotConfigView","downloadsStore","description","url","_seconds","setDownloadsSyncing","setAvailableDownloads","DownloadsTable","Downloads","setDownloads","fileName","xhr","XMLHttpRequest","responseType","onload","imageUrl","window","URL","webkitURL","createObjectURL","response","tag","document","createElement","href","download","body","appendChild","click","removeChild","send","forceDownload","DownloadsView","icon","margin","iconConnected","iconDisconnected","BackendStatus","getBackendConnected","BackendConnected","onBackendStatusChanged","nextStatus","clsx","OverviewView","getScrapingSpeedData","JobsPerMinute","setJobsPerMinute","LocationsView","tabsHeader","backgroundColor","palette","primary","main","tab","height","text","MainView","allTabs","path","render","Tabs","pathname","Box","Tab","Link","to","Overview","App","Main","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.015bc5a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { Dispatcher } from \"flux\";\n\nconst dispatcher = new Dispatcher();\n\nexport default dispatcher;\n","const keyMirror = require(\"keymirror\");\n\nconst ActionTypes = keyMirror({\n  SCRAPER_CONNECTED: null,\n  CONTENT_SCRAPED: null,\n  SPAWN_SCRAPER: null,\n  STOP_SCRAPERS: null,\n  FRONTEND_STATUS_RECEIVED: null,\n  SCRAPER_STATUS_CHANGED: null,\n  SCRAPER_SPAWNED: null,\n  DOWNLOADS_SYNC_REQUESTED: null,\n  DOWNLOADS_WAITING_FOR_SYNC: null,\n  DOWNLOADS_SYNC_RECEIVED: null,\n  BACKEND_STATUS_CHANGED: null,\n  JOBS_BATCH_SCRAPED: null,\n  LOCATION_UPDATED: null,\n  SNAPSHOT_CONFIG_UPDATED: null,\n  SCRAPE_LOCATION_BY_TERM_REQUESTED: null,\n});\n\nexport default ActionTypes;\n","const keyMirror = require(\"keymirror\");\n\nconst SocketEvents = keyMirror({\n  STATUS: null,\n  SCRAPER_CONNECTED: null,\n  CONTENT_SCRAPED: null,\n  FRONTEND_STATUS: null,\n  SPAWN_SCRAPER: null,\n  SESSION_ID: null,\n  STATUS_RECEIVED: null,\n  STOP_SCRAPERS: null,\n  SCRAPER_STATUS_CHANGED: null,\n  DOWNLOADS_SYNC_REQUESTED: null,\n  DOWNLOADS_SYNC_RECEIVED: null,\n  BACKEND_STATUS_CHANGED: null,\n  JOBS_BATCH_SCRAPED: null,\n  LOCATION_UPDATED: null,\n  SCRAPE_LOCATION_BY_TERM: null,\n});\n\nexport default SocketEvents;\n","import store from \"./store\";\nimport dispatcher from \"./dispatcher\";\nimport ActionTypes from \"./Constants/ActionTypes\";\n\nimport FrontendStatus from \"./Models/FrontendStatus\";\nimport ScraperStatus from \"./Models/ScraperStatus\";\n\nimport SocketEvents from \"./Constants/SocketEvents\";\nimport socket from \"./socket\";\nimport Download from \"./Models/Download\";\n\nconst sessIdReceived = () => {\n  requestStatus();\n};\n\nconst statusReceived = (status) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.FRONTEND_STATUS_RECEIVED,\n    data: { status },\n  });\n};\n\nconst scrapeLocationByTerm = (term) => {\n  socket.sendMessage(SocketEvents.SCRAPE_LOCATION_BY_TERM, term);\n};\n\nconst requestStatus = () => {\n  socket.sendMessage(SocketEvents.FRONTEND_STATUS);\n};\n\n/**\n *\n * @param {ScraperStatus} scraperStatus\n */\nconst scraperStatusChanged = (scraperStatus) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.SCRAPER_STATUS_CHANGED,\n    data: { scraperStatus },\n  });\n};\n\nconst syncDownloads = () => {\n  socket.sendMessage(SocketEvents.DOWNLOADS_SYNC_REQUESTED);\n  dispatcher.dispatch({\n    actionType: ActionTypes.DOWNLOADS_WAITING_FOR_SYNC,\n    data: { isWaiting: true },\n  });\n\n  // In 5 seconds, stop waiting in despite of data received or not\n  setTimeout(() => {\n    dispatcher.dispatch({\n      actionType: ActionTypes.DOWNLOADS_WAITING_FOR_SYNC,\n      data: { isWaiting: false },\n    });\n  }, 5000);\n};\n\n/**\n * @param {Download[]} downloads\n */\nconst downloadsSyncReceived = (downloads) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.DOWNLOADS_SYNC_RECEIVED,\n    data: { downloads },\n  });\n};\n\nconst jobsBatchScraped = (jobsBatch) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.JOBS_BATCH_SCRAPED,\n    data: { jobsBatch },\n  });\n};\n\nconst backendStatusChanged = ({ backendConnected }) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.BACKEND_STATUS_CHANGED,\n    data: { backendConnected },\n  });\n};\n\nconst locationUpdated = (location) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.LOCATION_UPDATED,\n    data: { location },\n  });\n};\n\nconst scrapingSpeedDataReceived = (speedData) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.SCRAPING_SPEED_DATA_UPDATED,\n    data: { speedData },\n  });\n};\nconst group = {\n  statusReceived,\n  requestStatus,\n  sessIdReceived,\n  scraperStatusChanged,\n  syncDownloads,\n  downloadsSyncReceived,\n  backendStatusChanged,\n  jobsBatchScraped,\n  locationUpdated,\n  scrapeLocationByTerm,\n  scrapingSpeedDataReceived,\n};\nexport default group;\n","import dispatcher from \"./dispatcher\";\n\nimport actions from \"./actions\";\n\nimport SocketEvents from \"./Constants/SocketEvents\";\n\nconst bindSocketHandler = (socket) => {\n  socket.on(\"connect\", () => {\n    socket.emit(\"frontend\");\n  });\n  socket.on(SocketEvents.SESSION_ID, () => {\n    actions.sessIdReceived();\n  });\n  socket.on(SocketEvents.FRONTEND_STATUS, (backendStatus) => {\n    actions.statusReceived(backendStatus);\n  });\n\n  socket.on(SocketEvents.SCRAPER_STATUS_CHANGED, (scraperStatus) => {\n    actions.scraperStatusChanged(scraperStatus);\n  });\n\n  socket.on(SocketEvents.BACKEND_STATUS_CHANGED, (status) => {\n    actions.backendStatusChanged(status);\n  });\n\n  socket.on(\"JOB_SCRAPED\", actions.scrapingSpeedDataReceived);\n\n  socket.on(SocketEvents.LOCATION_UPDATED, (location) => {\n    actions.locationUpdated(location);\n  });\n};\n\nexport default bindSocketHandler;\n","import io from \"socket.io-client\";\nimport bindSocketHandler from \"./socketHandler\";\n\nconst initialize = () => {\n  // Should be called once, maybe\n  const sock = io(\"wss://backendbebee.teocns.com:443\", {\n    secure: true,\n    reconnect: true,\n    rejectUnauthorized: false,\n    transports: [\"websocket\"],\n    withCredentials: true,\n  });\n\n  bindSocketHandler(sock);\n  // sock.on(\"connect\", () => {\n  //   console.log(\"connected \", sock.id);\n  // });\n  // Bind listeners\n\n  return sock;\n};\n\nconst socketInstance = initialize();\n\nconst sendMessage = (event, data) => {\n  socketInstance.emit(event, data);\n};\n\nexport default { socketInstance, sendMessage };\n","import dispatcher from \"./dispatcher\";\nimport ActionTypes from \"./Constants/ActionTypes\";\nimport Scraper from \"./Models/Scraper\";\nimport { sendMessage } from \"./socket\";\nimport { EventEmitter } from \"events\";\nimport SnapshotConfig from \"./Models/SnapshotConfig\";\n\nclass Store extends EventEmitter {\n  /**\n   * @type {bool}\n   */\n  #backendConnected;\n  /**\n   * @type {Scraper[]}\n   */\n  #scrapers;\n\n  #jobsScraped;\n\n  #scrapingSpeed;\n\n  /**\n   * @type {SnapshotConfig}\n   */\n  #snapshotConfigs;\n\n  downloadsSyncing;\n\n  addChangeListener(event, callback) {\n    this.on(event, callback);\n  }\n\n  removeChangeListener(event, callback) {\n    this.removeListener(event, callback);\n  }\n\n  emitChange(event, data) {\n    this.emit(event, data);\n  }\n\n  setScrapingSpeedData({ age, scraped }) {\n    let now = parseInt(new Date() / 1000);\n    this.#scrapingSpeed = parseInt(scraped / ((now - age) / 60));\n  }\n  getScrapingSpeedData() {\n    return this.#scrapingSpeed || 0;\n  }\n\n  registerStatus({ scrapers, jobsScraped, backendConnected, snapshotConfigs }) {\n    this.#scrapers = scrapers;\n    this.#jobsScraped = jobsScraped;\n    this.#snapshotConfigs = snapshotConfigs;\n    this.#backendConnected = backendConnected;\n  }\n\n  getScrapersTable() {\n    return (this.#scrapers || []).map((s) => {\n      let session = s.sessionData;\n      try {\n        session = JSON.stringify(s.sessionData);\n      } catch (e) {}\n\n      return {\n        id: s.uuid,\n        currentTask: s.currentTask,\n        session,\n        statusPretty: s.statusPretty,\n      };\n    });\n  }\n  setDownloadsSyncing(isWaiting) {\n    this.downloadSyncing = isWaiting;\n  }\n  getDownloadsSyncing() {\n    return this.downloadSyncing;\n  }\n\n  getBackendConnected() {\n    return this.#backendConnected;\n  }\n  setBackendConnected(backendConnected) {\n    console.log(backendConnected);\n    this.#backendConnected = backendConnected;\n  }\n}\n\nconst store = new Store();\n\nstore.dispatchToken = dispatcher.register((event) => {\n  let willEmitChange = true;\n  switch (event.actionType) {\n    case ActionTypes.FRONTEND_STATUS_RECEIVED:\n      store.registerStatus(event.data.status);\n      break;\n    case ActionTypes.BACKEND_STATUS_CHANGED:\n      store.setBackendConnected(event.data.backendConnected);\n      break;\n    case ActionTypes.SCRAPING_SPEED_DATA_UPDATED:\n      store.setScrapingSpeedData(event.data.speedData);\n      break;\n    default:\n      willEmitChange = false;\n      break; // do nothing\n  }\n\n  willEmitChange && store.emitChange(event.actionType, event.data);\n});\n\nexport default store;\n","const Vendors = {\r\n  GLASSDOOR: \"glassdoor\",\r\n  INDEED: \"indeed\",\r\n  LINKEDIN: \"linkedin\",\r\n  CAREER_BUILDER: \"careerbuilder\",\r\n};\r\n\r\nexport const EnabledVendors = {\r\n  GLASSDOOR: \"glassdoor\",\r\n};\r\n\r\nexport default Vendors;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Vendors, { EnabledVendors } from \"../Constants/Vendors\";\r\nimport {\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Paper,\r\n  makeStyles,\r\n  Typography,\r\n  FormLabel,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"inline-flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  subtitle: {\r\n    //color: theme.palette.text.disabled,\r\n  },\r\n}));\r\n\r\nfunction isFunction(functionToCheck) {\r\n  return (\r\n    functionToCheck && {}.toString.call(functionToCheck) === \"[object Function]\"\r\n  );\r\n}\r\n\r\nconst PickVendors = ({ onUpdated }) => {\r\n  const [SelectedVendors, setSelectedVendors] = useState(\r\n    Object.values([Vendors.GLASSDOOR])\r\n  );\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n  const onCheckChanged = (vendor) => {\r\n    const includes = SelectedVendors.includes(vendor);\r\n    // const onlyEnabledVendorsSelected = SelectedVendors.filter((v) =>\r\n    //   Object.values(EnabledVendors).includes(v)\r\n    // );\r\n    let willChangeTo = undefined;\r\n    if (includes && SelectedVendors.length > 1) {\r\n      // Remove from arr\r\n      willChangeTo = SelectedVendors.filter((v) => v !== vendor);\r\n      setSelectedVendors();\r\n    } else if (!includes) {\r\n      willChangeTo = [vendor, ...SelectedVendors];\r\n    }\r\n    if (willChangeTo) {\r\n      setSelectedVendors(willChangeTo);\r\n      isFunction(onUpdated) && onUpdated(willChangeTo);\r\n    }\r\n  };\r\n\r\n  const renderCheckboxes = () => {\r\n    return Object.values(Vendors).map((vendor) => (\r\n      <FormControlLabel\r\n        label={vendor.charAt(0).toUpperCase() + vendor.slice(1)}\r\n        key={vendor}\r\n        control={\r\n          <Checkbox\r\n            size=\"small\"\r\n            checked={\r\n              SelectedVendors.includes(vendor) &&\r\n              Object.values(EnabledVendors).includes(vendor)\r\n            }\r\n            onChange={() => {\r\n              onCheckChanged(vendor);\r\n            }}\r\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n            disabled={!Object.values(EnabledVendors).includes(vendor)}\r\n          />\r\n        }\r\n      />\r\n    ));\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <FormLabel\r\n        component=\"legend\"\r\n        style={{ textAlign: \"left\", fontSize: \"small\" }}\r\n      >\r\n        View data for\r\n      </FormLabel>\r\n      <FormGroup style={{ marginTop: theme.spacing(0.5) }} row>\r\n        {renderCheckboxes()}\r\n      </FormGroup>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PickVendors);\r\n","import React from \"react\";\r\nimport PickVendors from \"../Components/PickVendors\";\r\nimport ScrapersTable from \"../Components/ScrapersTable\";\r\nimport actions from \"../actions\";\r\nimport {\r\n  FormGroup,\r\n  IconButton,\r\n  Tooltip,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { AddCircle } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actionsRow: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst spawnScraper = () => {\r\n  if (\r\n    window.confirm(\r\n      \"Warning: this may increase scraping effeciency but performance might be severally affected. Are you sure to continue?\"\r\n    )\r\n  ) {\r\n    actions.spawnScraper();\r\n  }\r\n};\r\n\r\nconst ScrapersView = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormGroup row={true} className={classes.actionsRow}>\r\n        <Button variant=\"contained\" color=\"secondary\" startIcon={<AddCircle />}>\r\n          Spawn scraper\r\n        </Button>\r\n      </FormGroup>\r\n      <ScrapersTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScrapersView;\r\n","import moment from \"moment\";\r\n\r\nexport const prettyTimelapse = (date) => {\r\n  if (!moment.isMoment(date)) {\r\n    date = moment.unix(date); // ok for js date, milliseconds or string in ISO format\r\n  }\r\n  if (date.isSame(moment(), \"day\")) {\r\n    return date.format(\"hh:mm a\");\r\n  } else if (date.isSame(moment().subtract(1, \"d\"), \"day\")) {\r\n    return \"Yesterday\";\r\n  } else if (date.isSame(moment(), \"week\")) {\r\n    return date.format(\"dddd\");\r\n  } else {\r\n    return date.format(\"DD/MM/YYYY\");\r\n  }\r\n};\r\n\r\n/**\r\n * @typedef {Object} TimeRemaining\r\n * @property {number} total\r\n * @property {number} days\r\n * @property {number} hours\r\n * @property {number} minutes\r\n * @property {number} seconds\r\n */\r\n\r\n/**\r\n * @param {number} endtime\r\n * @returns {TimeRemaining}\r\n */\r\nexport function getTimeRemaining(endtime) {\r\n  const total = endtime - parseInt(Date.now() / 1000);\r\n  const seconds = Math.floor(total % 60);\r\n  const minutes = Math.floor((total / 60) % 60);\r\n  const hours = Math.floor((total / (60 * 60)) % 24);\r\n  const days = Math.floor(total / (60 * 60 * 24));\r\n\r\n  return {\r\n    total,\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n  };\r\n}\r\n\r\nexport const getFilename = (fullPath) => {\r\n  var startIndex =\r\n    fullPath.indexOf(\"\\\\\") >= 0\r\n      ? fullPath.lastIndexOf(\"\\\\\")\r\n      : fullPath.lastIndexOf(\"/\");\r\n  var filename = fullPath.substring(startIndex);\r\n  if (filename.indexOf(\"\\\\\") === 0 || filename.indexOf(\"/\") === 0) {\r\n    filename = filename.substring(1);\r\n  }\r\n};\r\n\r\nexport function forceDownload(url, fileName) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.open(\"GET\", url, true);\r\n  xhr.responseType = \"blob\";\r\n  xhr.onload = function () {\r\n    var urlCreator = window.URL || window.webkitURL;\r\n    var imageUrl = urlCreator.createObjectURL(this.response);\r\n    var tag = document.createElement(\"a\");\r\n    tag.href = imageUrl;\r\n    tag.download = fileName;\r\n    document.body.appendChild(tag);\r\n    tag.click();\r\n    document.body.removeChild(tag);\r\n  };\r\n  xhr.send();\r\n}\r\n","import dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport Download from \"../Models/Download\";\r\nimport JobsBatch from \"../Models/JobsBatch\";\r\nimport Location from \"../Models/Location\";\r\nimport { EventEmitter } from \"events\";\r\nimport { prettyTimelapse } from \"../helpers\";\r\n\r\nclass LocationsStore extends EventEmitter {\r\n  /**\r\n   * @type {Location[]}\r\n   */\r\n  #locations;\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  #LocationsSyncing;\r\n\r\n  constructor(params) {\r\n    super(params);\r\n    this.#LocationsSyncing = false;\r\n    this.#locations = [];\r\n  }\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  setLocationsSyncing(isWaiting) {\r\n    this.#LocationsSyncing = isWaiting;\r\n  }\r\n  getLocationsSyncing() {\r\n    return this.#LocationsSyncing;\r\n  }\r\n\r\n  setLocations(locations) {\r\n    this.#locations = locations;\r\n  }\r\n\r\n  locationUpdated(location) {\r\n    const ind = this.#locations.findIndex(\r\n      (loc) => loc.locationId === location.locationId\r\n    );\r\n    this.#locations[ind] = location;\r\n  }\r\n  getTable() {\r\n    return (this.#locations || []).map((s) => {\r\n      let loc = s;\r\n      s.id = s.realId;\r\n      return loc;\r\n    });\r\n  }\r\n\r\n  getName(locationId) {\r\n    const loc = this.#locations.find((c) => c.locationId === locationId);\r\n    if (loc) {\r\n      return loc.label;\r\n    }\r\n    return \"\";\r\n  }\r\n}\r\n\r\nconst locationsStore = new LocationsStore();\r\n\r\nlocationsStore.dispatchToken = dispatcher.register((event) => {\r\n  let willEmitChange = true;\r\n  switch (event.actionType) {\r\n    case ActionTypes.FRONTEND_STATUS_RECEIVED:\r\n      locationsStore.setLocations(event.data.status.locations);\r\n      break;\r\n    case ActionTypes.JOBS_BATCH_SCRAPED:\r\n      locationsStore.jobsBatchScraped(event.data.jobsBatch);\r\n      break;\r\n    case ActionTypes.LOCATION_UPDATED:\r\n      locationsStore.locationUpdated(event.data.location);\r\n      break;\r\n    default:\r\n      willEmitChange = false;\r\n      break; // do nothing\r\n  }\r\n\r\n  willEmitChange && locationsStore.emitChange(event.actionType, event.data);\r\n});\r\n\r\nexport default locationsStore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport locationsStore from \"../stores/locations\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport LocationSearching from \"@material-ui/icons/LocationSearching\";\r\n\r\nimport { IconButton, TextField, Tooltip, Typography } from \"@material-ui/core\";\r\n\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { prettyTimelapse } from \"../helpers\";\r\nimport { MoreHoriz, Replay } from \"@material-ui/icons\";\r\n\r\nconst columns = [\r\n  { id: \"id\", label: \"ID\", minWidth: 100 },\r\n  { id: \"countryName\", label: \"Country\", minWidth: 100 },\r\n  { id: \"locationType\", label: \"Type\", minWidth: 180 },\r\n  { id: \"label\", label: \"Name\", minWidth: 320 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  searchParent: {\r\n    marginBottom: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nexport default function LocationsTable() {\r\n  const [Locations, setLocations] = useState([...locationsStore.getTable()]);\r\n  const [Filter, setFilter] = useState(\"\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    const act = event.currentTarget.getAttribute(\"data-action\");\r\n    if (act) {\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const updateRows = () => {\r\n    const newCome = [...locationsStore.getTable()];\r\n\r\n    if (Filter.length) {\r\n      const filter = Filter.toLowerCase();\r\n      const filtered = newCome.filter(\r\n        (c) =>\r\n          c.label.toString().toLowerCase().includes(filter) ||\r\n          \r\n          c.locationId.toString().toLowerCase().includes(filter) ||\r\n          c.countryName.toString().toLowerCase().includes(filter) ||\r\n          c.id.toString().toLowerCase().includes(filter)\r\n      );\r\n\r\n      return setLocations(filtered);\r\n    }\r\n    setLocations(newCome);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    locationsStore.addChangeListener(\r\n      ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n      updateRows\r\n    );\r\n\r\n    locationsStore.addChangeListener(ActionTypes.LOCATION_UPDATED, updateRows);\r\n\r\n    return () => {\r\n      locationsStore.removeChangeListener(\r\n        ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n        updateRows\r\n      );\r\n      locationsStore.removeChangeListener(\r\n        ActionTypes.LOCATION_UPDATED,\r\n        updateRows\r\n      );\r\n    };\r\n  });\r\n\r\n  const filter = (evt) => {\r\n    const txt = evt.currentTarget.value;\r\n    setFilter(txt);\r\n    setTimeout(() => {\r\n      updateRows();\r\n    }, 100);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className={classes.searchParent}>\r\n        <Paper style={{ padding: 8, display: \"flex\", alignItems: \"center\" }}>\r\n          <TextField placeholder=\"Search\" onChange={filter}></TextField>\r\n        </Paper>\r\n      </div>\r\n\r\n      <Paper className={classes.root}>\r\n        <TableContainer className={classes.container}>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {Locations.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              ).map((row) => {\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row[\"locationId\"]}\r\n                  >\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {(() => {\r\n                            switch (column.id) {\r\n                              case \"locationType\":\r\n                                if (value === \"N\") {\r\n                                  return \"State\";\r\n                                } else if (value === \"C\") {\r\n                                  return \"City\";\r\n                                }\r\n                                break;\r\n                              case \"isActiveForScrape\":\r\n                                return (\r\n                                  <div>\r\n                                    <IconButton\r\n                                      aria-controls=\"simple-menu\"\r\n                                      aria-haspopup=\"true\"\r\n                                      onClick={handleClick}\r\n                                    >\r\n                                      <MoreHoriz />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                      id=\"simple-menu\"\r\n                                      anchorEl={anchorEl}\r\n                                      keepMounted\r\n                                      open={Boolean(anchorEl)}\r\n                                      onClose={handleClose}\r\n                                    >\r\n                                      <MenuItem\r\n                                        onClick={handleClose}\r\n                                        data-action=\"scrapeNow\"\r\n                                        disabled={!value.finished}\r\n                                      >\r\n                                        <Replay\r\n                                          style={{\r\n                                            marginRight: 8,\r\n                                          }}\r\n                                        />\r\n                                        Scrape now\r\n                                      </MenuItem>\r\n                                      <MenuItem\r\n                                        onClick={handleClose}\r\n                                        style={{ paddingLeft: 8 }}\r\n                                      >\r\n                                        <Switch\r\n                                          style={{ marginRight: 2 }}\r\n                                          checked={true}\r\n                                          name=\"checkedB\"\r\n                                          disabled\r\n                                          size=\"small\"\r\n                                          color=\"primary\"\r\n                                        />\r\n                                        Active\r\n                                      </MenuItem>\r\n                                    </Menu>\r\n                                  </div>\r\n                                );\r\n                                break;\r\n\r\n                              default:\r\n                                return column.format &&\r\n                                  typeof value === \"number\"\r\n                                  ? column.format(value)\r\n                                  : value;\r\n                            }\r\n                          })()}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={Locations.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport Download from \"../Models/Download\";\r\nimport JobsBatch from \"../Models/JobsBatch\";\r\nimport Location from \"../Models/Location\";\r\nimport { EventEmitter } from \"events\";\r\nimport { prettyTimelapse } from \"../helpers\";\r\n\r\nclass SnapshotConfigs extends EventEmitter {\r\n  /**\r\n   * @type {SnapshotConfigs[]}\r\n   */\r\n  #snapshotConfigs;\r\n\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.#snapshotConfigs = [];\r\n  }\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  setSnapshotConfigs(locations) {\r\n    this.#snapshotConfigs = locations;\r\n  }\r\n\r\n  locationUpdated(location) {\r\n    const ind = this.#snapshotConfigs.findIndex(\r\n      (loc) => loc.locationId === location.locationId\r\n    );\r\n    this.#snapshotConfigs[ind] = location;\r\n  }\r\n  getTable() {\r\n    return (this.#snapshotConfigs || []).map((s) => {\r\n      let el = s;\r\n      s.id = s.uuid;\r\n      return el;\r\n    });\r\n  }\r\n}\r\n\r\nconst snapshotConfigStore = new SnapshotConfigs();\r\n\r\nsnapshotConfigStore.dispatchToken = dispatcher.register((event) => {\r\n  let willEmitChange = true;\r\n  switch (event.actionType) {\r\n    case ActionTypes.FRONTEND_STATUS_RECEIVED:\r\n      snapshotConfigStore.setSnapshotConfigs(event.data.status.snapshotConfigs);\r\n      break;\r\n    default:\r\n      willEmitChange = false;\r\n      break; // do nothing\r\n  }\r\n\r\n  willEmitChange &&\r\n    snapshotConfigStore.emitChange(event.actionType, event.data);\r\n});\r\n\r\nexport default snapshotConfigStore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport snapshotConfigStore from \"../stores/snapshotConfig\";\r\nimport locationStore from \"../stores/locations\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\n\r\nimport { IconButton, Typography } from \"@material-ui/core\";\r\n\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nimport { prettyTimelapse } from \"../helpers\";\r\nimport { MoreHoriz, Replay } from \"@material-ui/icons\";\r\n\r\nconst columns = [\r\n  { id: \"locationId\", label: \"Location\", minWidth: 180 },\r\n  { id: \"keywords\", label: \"Keywords\", minWidth: 320 },\r\n  { id: \"scrapeInterval\", label: \"Scrape once every\", minWidth: 320 },\r\n  { id: \"snapshot\", label: \"Latest scrape job\", minWidth: 320 },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n}));\r\n\r\nexport default function SnapshotConfigTable() {\r\n  const [SnapshotConfigs, setSnapshotConfigs] = useState([\r\n    ...snapshotConfigStore.getTable(),\r\n  ]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    const act = event.currentTarget.getAttribute(\"data-action\");\r\n    if (act) {\r\n    }\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const updateRows = () => {\r\n    setSnapshotConfigs([...snapshotConfigStore.getTable()]);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    snapshotConfigStore.addChangeListener(\r\n      ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n      updateRows\r\n    );\r\n\r\n    snapshotConfigStore.addChangeListener(\r\n      ActionTypes.SNAPSHOT_CONFIG_UPDATED,\r\n      updateRows\r\n    );\r\n\r\n    return () => {\r\n      snapshotConfigStore.removeChangeListener(\r\n        ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n        updateRows\r\n      );\r\n      snapshotConfigStore.removeChangeListener(\r\n        ActionTypes.SNAPSHOT_CONFIG_UPDATED,\r\n        updateRows\r\n      );\r\n    };\r\n  });\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {SnapshotConfigs.slice(\r\n              page * rowsPerPage,\r\n              page * rowsPerPage + rowsPerPage\r\n            ).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {(() => {\r\n                          switch (column.id) {\r\n                            case \"scrapeInterval\":\r\n                              return (\r\n                                <div>\r\n                                  <code>{value} </code>\r\n                                  <Typography variant=\"caption\">\r\n                                    seconds\r\n                                  </Typography>\r\n                                </div>\r\n                              );\r\n                              break;\r\n                            case \"snapshot\":\r\n                              return (\r\n                                <div\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                  }}\r\n                                >\r\n                                  <Typography variant=\"overline\">\r\n                                    {prettyTimelapse(value.age)}\r\n                                  </Typography>\r\n\r\n                                  <Typography variant=\"caption\">\r\n                                    Jobs scraped:{\" \"}\r\n                                    <code>\r\n                                      {value.scrapedJobs}/{value.totalJobsCount}\r\n                                    </code>\r\n                                  </Typography>\r\n                                  <Typography variant=\"caption\">\r\n                                    Pages scraped: {value.scrapedPages}/\r\n                                    <code>{value.totalNumberOfPages}</code>\r\n                                  </Typography>\r\n                                </div>\r\n                              );\r\n                              break;\r\n                            case \"isActiveForScrape\":\r\n                              return (\r\n                                <div>\r\n                                  <IconButton\r\n                                    aria-controls=\"simple-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleClick}\r\n                                  >\r\n                                    <MoreHoriz />\r\n                                  </IconButton>\r\n                                  <Menu\r\n                                    id=\"simple-menu\"\r\n                                    anchorEl={anchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(anchorEl)}\r\n                                    onClose={handleClose}\r\n                                  >\r\n                                    <MenuItem\r\n                                      onClick={handleClose}\r\n                                      data-action=\"scrapeNow\"\r\n                                      disabled={!value.finished}\r\n                                    >\r\n                                      <Replay\r\n                                        style={{\r\n                                          marginRight: 8,\r\n                                        }}\r\n                                      />\r\n                                      Scrape now\r\n                                    </MenuItem>\r\n                                    <MenuItem\r\n                                      onClick={handleClose}\r\n                                      style={{ paddingLeft: 8 }}\r\n                                    >\r\n                                      <Switch\r\n                                        style={{ marginRight: 2 }}\r\n                                        checked={true}\r\n                                        name=\"checkedB\"\r\n                                        disabled\r\n                                        size=\"small\"\r\n                                        color=\"primary\"\r\n                                      />\r\n                                      Active\r\n                                    </MenuItem>\r\n                                  </Menu>\r\n                                </div>\r\n                              );\r\n                              break;\r\n                            case \"latestSnapshot\":\r\n                              return (\r\n                                <div\r\n                                  style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                  }}\r\n                                >\r\n                                  <Typography variant=\"overline\">\r\n                                    {prettyTimelapse(value.age)}\r\n                                  </Typography>\r\n                                  <Typography variant=\"caption\">\r\n                                    Filter: <code>LAST DAY</code>\r\n                                  </Typography>\r\n                                  <Typography variant=\"caption\">\r\n                                    Jobs scraped:{\" \"}\r\n                                    <code>\r\n                                      {value.scrapedJobs}/{value.totalJobsCount}\r\n                                    </code>\r\n                                  </Typography>\r\n                                  <Typography variant=\"caption\">\r\n                                    Pages scraped: {value.scrapedPages}/\r\n                                    <code>{value.totalNumberOfPages}</code>\r\n                                  </Typography>\r\n                                </div>\r\n                              );\r\n                              break;\r\n                            default:\r\n                              return column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value;\r\n                          }\r\n                        })()}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={SnapshotConfigs.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PickVendors from \"../Components/PickVendors\";\r\nimport LocationsTable from \"../Components/LocationsTable\";\r\n\r\nimport SnapshotConfigTable from \"../Components/SnapshotConfigTable\";\r\n\r\nconst SnasphotConfigView = () => {\r\n  return (\r\n    <div>\r\n      <SnapshotConfigTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SnasphotConfigView;\r\n","import dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport Download from \"../Models/Download\";\r\n\r\nimport { EventEmitter } from \"events\";\r\nimport { prettyTimelapse } from \"../helpers\";\r\n\r\nclass DownloadsStore extends EventEmitter {\r\n  /**\r\n   * @type {Download[]}\r\n   */\r\n  #downloads;\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  #downloadsSyncing;\r\n  constructor(params) {\r\n    super(params);\r\n    this.#downloadsSyncing = false;\r\n    this.#downloads = [];\r\n  }\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  setDownloadsSyncing(isWaiting) {\r\n    this.#downloadsSyncing = isWaiting;\r\n  }\r\n  getDownloadsSyncing() {\r\n    return this.#downloadsSyncing;\r\n  }\r\n\r\n  /**\r\n   * @param {Download[]} downloads\r\n   */\r\n  setAvailableDownloads(downloads) {\r\n    this.#downloads = downloads;\r\n  }\r\n\r\n  getTable() {\r\n    return this.#downloads.map((s) => {\r\n      return {\r\n        id: s.uuid,\r\n        description: s.description,\r\n        size: s.size,\r\n        url: s.url,\r\n        age: prettyTimelapse(s.age._seconds),\r\n      };\r\n    });\r\n  }\r\n}\r\n\r\nconst downloadsStore = new DownloadsStore();\r\n\r\ndownloadsStore.dispatchToken = dispatcher.register((event) => {\r\n  let willEmitChange = true;\r\n  switch (event.actionType) {\r\n    case ActionTypes.DOWNLOADS_WAITING_FOR_SYNC:\r\n      downloadsStore.setDownloadsSyncing(event.data.isWaiting);\r\n      break;\r\n    case ActionTypes.DOWNLOADS_SYNC_RECEIVED:\r\n      downloadsStore.setDownloadsSyncing(false);\r\n      downloadsStore.setAvailableDownloads(event.data.downloads);\r\n      break;\r\n    case ActionTypes.FRONTEND_STATUS_RECEIVED:\r\n      downloadsStore.setAvailableDownloads(event.data.status.downloads);\r\n      break;\r\n    default:\r\n      willEmitChange = false;\r\n      break; // do nothing\r\n  }\r\n\r\n  willEmitChange && downloadsStore.emitChange(event.actionType, event.data);\r\n});\r\n\r\nexport default downloadsStore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport downloadsStore from \"../stores/downloads\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Download from \"../Models/Download\";\r\n\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { getFilename, forceDownload } from \"../helpers\";\r\n\r\nconst columns = [\r\n  { id: \"id\", label: \"ID\", minWidth: 100 },\r\n  { id: \"age\", label: \"Generated\", minWidth: 320 },\r\n  { id: \"description\", label: \"Description\", minWidth: 320 },\r\n  { id: \"size\", label: \"Size\", minWidth: 280 },\r\n  { id: \"url\", label: \"URL\", minWidth: 480 },\r\n  { id: \"download\", label: \"Actions\", minWidth: 100, align: \"right\" },\r\n];\r\n\r\nfunction startDownload(url) {\r\n  var link = document.createElement(\"a\");\r\n  link.href = url;\r\n  link.style.display = \"none\";\r\n  link.download = getFilename(url);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  //window.open(url, link.download);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n}));\r\n\r\nexport default function DownloadsTable() {\r\n  const [Downloads, setDownloads] = useState(downloadsStore.getTable());\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  console.log(Downloads);\r\n  const updateRows = () => {\r\n    setDownloads(downloadsStore.getTable());\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    downloadsStore.addChangeListener(\r\n      ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n      updateRows\r\n    );\r\n\r\n    downloadsStore.addChangeListener(\r\n      ActionTypes.DOWNLOADS_SYNC_RECEIVED,\r\n      updateRows\r\n    );\r\n\r\n    return () => {\r\n      downloadsStore.removeChangeListener(\r\n        ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n        updateRows\r\n      );\r\n\r\n      downloadsStore.removeChangeListener(\r\n        ActionTypes.DOWNLOADS_SYNC_RECEIVED,\r\n        updateRows\r\n      );\r\n    };\r\n  });\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Downloads.slice(\r\n              page * rowsPerPage,\r\n              page * rowsPerPage + rowsPerPage\r\n            ).map((row) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  tabIndex={-1}\r\n                  key={row.code || row.id}\r\n                >\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    if (column.id === \"download\") {\r\n                      return (\r\n                        <TableCell\r\n                          key={\"download-\" + row.id}\r\n                          align={column.align}\r\n                        >\r\n                          <IconButton\r\n                            color=\"primary\"\r\n                            aria-label=\"Download XML\"\r\n                            onClick={() => {\r\n                              forceDownload(row.url, getFilename(row.url));\r\n                            }}\r\n                          >\r\n                            <GetAppIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === \"number\"\r\n                          ? column.format(value)\r\n                          : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={Downloads.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PickVendors from \"../Components/PickVendors\";\r\nimport DownloadsTable from \"../Components/DownloadsTable\";\r\n\r\n\r\n\r\n\r\nconst DownloadsView = () => {\r\n  return (\r\n    <div>\r\n      <DownloadsTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadsView;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport store from \"../store\";\r\n\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"inline-flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  icon: {\r\n    fontSize: \"1rem\",\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  iconConnected: {\r\n    color: \"green\",\r\n  },\r\n  iconDisconnected: {\r\n    color: \"red\",\r\n  },\r\n}));\r\n\r\nconst BackendStatus = () => {\r\n  const [BackendConnected, setBackendConnected] = useState(\r\n    store.getBackendConnected()\r\n  );\r\n\r\n  const onBackendStatusChanged = () => {\r\n    const nextStatus = store.getBackendConnected();\r\n    if (nextStatus !== BackendConnected) {\r\n      setBackendConnected(nextStatus);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    store.addChangeListener(\r\n      ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n      onBackendStatusChanged\r\n    );\r\n    store.addChangeListener(\r\n      ActionTypes.BACKEND_STATUS_CHANGED,\r\n      onBackendStatusChanged\r\n    );\r\n\r\n    return () => {\r\n      store.removeChangeListener(\r\n        ActionTypes.FRONTEND_STATUS_RECEIVED,\r\n        onBackendStatusChanged\r\n      );\r\n      store.removeChangeListener(\r\n        ActionTypes.BACKEND_STATUS_CHANGED,\r\n        onBackendStatusChanged\r\n      );\r\n    };\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <FiberManualRecordIcon\r\n        className={clsx({\r\n          [classes.icon]: true,\r\n          [classes.iconConnected]: BackendConnected,\r\n          [classes.iconDisconnected]: !BackendConnected,\r\n        })}\r\n      />\r\n      <Typography>\r\n        {BackendConnected ? \"Bots connected\" : \"Bots disconnected\"}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BackendStatus;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport BackendStatus from \"../Components/BackendStatus\";\r\nimport ActionTypes from \"../Constants/ActionTypes\";\r\nimport store from \"../store\";\r\n\r\nconst OverviewView = () => {\r\n  const [JobsPerMinute, setJobsPerMinute] = useState(\r\n    store.getScrapingSpeedData()\r\n  );\r\n\r\n  const onUpdated = () => [\r\n    setJobsPerMinute(store.getScrapingSpeedData().toString()),\r\n  ];\r\n  useEffect(() => {\r\n    store.addChangeListener(ActionTypes.SCRAPING_SPEED_DATA_UPDATED, onUpdated);\r\n    return () => {\r\n      store.removeChangeListener(\r\n        ActionTypes.SCRAPING_SPEED_DATA_UPDATED,\r\n        onUpdated\r\n      );\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Typography variant=\"h6\">\r\n      Scrapes per minute: <code>{JobsPerMinute}</code>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default OverviewView;\r\n","import React from \"react\";\r\nimport PickVendors from \"../Components/PickVendors\";\r\nimport LocationsTable from \"../Components/LocationsTable\";\r\n\r\n\r\n\r\n\r\n\r\nconst LocationsView = () => {\r\n  return (\r\n    <div>\r\n      <LocationsTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationsView;\r\n","import React, { Fragment } from \"react\";\n\nimport {\n  Typography,\n  AppBar,\n  Tabs,\n  Tab,\n  makeStyles,\n  Box,\n  useTheme,\n} from \"@material-ui/core\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\nimport ScrapersTable from \"../Components/ScrapersTable\";\nimport ScrapersView from \"./Scrapers\";\nimport SnapshotConfigView from \"./SnapshotConfig\";\nimport DownloadsView from \"./Downloads\";\nimport OverviewView from \"./Overview\";\nimport LocationsView from \"./Locations\";\nimport PickVendors from \"../Components/PickVendors\";\nimport BackendStatus from \"../Components/BackendStatus\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2rem\",\n  },\n  tabsHeader: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"#ffffff\",\n    display: \"flex\",\n    \"& .MuiTabs-flexContainer\": {\n      justifyContent: \"space-between\",\n    },\n  },\n  backendStatus: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginRight: theme.spacing(2),\n  },\n  tab: {\n    height: \"3.5rem\",\n  },\n  subtitle: {\n    color: theme.palette.text.disabled,\n  },\n}));\n\nconst MainView = () => {\n  const classes = useStyles();\n  const allTabs = [\"/\", \"/jobs\", \"/locations\", \"/downloads\"];\n  const theme = useTheme();\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route\n          path=\"/\"\n          render={({ location }) => (\n            <Fragment>\n              <Tabs value={location.pathname} className={classes.tabsHeader}>\n                <Box>\n                  <Tab\n                    className={classes.tab}\n                    label=\"Overview\"\n                    value=\"/\"\n                    component={Link}\n                    to={allTabs[0]}\n                  />\n                  <Tab\n                    className={classes.tab}\n                    label=\"Scraping\"\n                    value=\"/config\"\n                    component={Link}\n                    to={allTabs[1]}\n                  />\n                  {/* <Tab\n                    className={classes.tab}\n                    value=\"/scrapers\"\n                    label=\"Scrapers\"\n                    component={Link}\n                    to={allTabs[2]}\n                  /> */}\n                  <Tab\n                    className={classes.tab}\n                    value=\"/locations\"\n                    label=\"Locations\"\n                    component={Link}\n                    to={allTabs[2]}\n                  />\n                  <Tab\n                    className={classes.tab}\n                    value=\"/downloads\"\n                    label=\"Downloads\"\n                    component={Link}\n                    to={allTabs[3]}\n                  />\n                </Box>\n                <div className={classes.backendStatus}>\n                  <BackendStatus />\n                </div>\n              </Tabs>\n              <div className={classes.root}>\n                {/* <Box flex=\"column\" alignItems=\"start\">\n                  <Typography\n                    variant=\"subtitle2\"\n                    align=\"left\"\n                    className={classes.subtitle}\n                  >\n                    View data for\n                  </Typography>\n                </Box> */}\n                <Box\n                  justifyContent=\"start\"\n                  display=\"flex\"\n                  marginBottom={theme.spacing(0.5)}\n                >\n                  <PickVendors />\n                </Box>\n                <Switch>\n                  <Route\n                    path={allTabs[1]}\n                    render={() => <SnapshotConfigView />}\n                  />\n                  <Route path={allTabs[2]} render={() => <LocationsView />} />\n                  <Route path={allTabs[3]} render={() => <DownloadsView />} />\n                  <Route path={allTabs[0]} render={() => <OverviewView />} />\n                </Switch>\n              </div>\n            </Fragment>\n          )}\n        />\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default MainView;\n","import \"./App.css\";\nimport logo from \"./logo.svg\";\n\nimport MainView from \"./Views/Main\";\nimport socket from \"./socket\";\nimport SocketEvents from \"./Constants/SocketEvents\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainView />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}